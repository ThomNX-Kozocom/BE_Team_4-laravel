# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
    aws-ecr: circleci/aws-ecr@7.0.0
    aws-ecs: circleci/aws-ecs@1.0.1
    aws-s3: circleci/aws-s3@1.0.11
    aws-cli: circleci/aws-cli@0.1.13

jobs:
    checkout:
        docker:
            - image: circleci/python:3-stretch-browsers
        steps:
            - checkout:
                  path: ~/team_4
            - persist_to_workspace:
                  root: ~/team_4
                  paths:
                      - .
    push_image_enudge:
        docker:
            - image: circleci/node:10
        working_directory: ~/team_4
        steps:
            - attach_workspace:
                  at: ~/team_4
            - setup_remote_docker:
                  docker_layer_caching: false
            - run:
                  name: edit file for aws
                  command: |
                      cat \<<EOF > .env
                        APP_KEY=base64:iEw2hOwRbMldN0lMhtg0g7klkcOlUSeAMZ2Tk4gUAys=
                      EOF
            - aws-ecr/build-and-push-image:
                  checkout: false
                  repo: "enudge-app"
                  dockerfile: Dockerfile
                  tag: ${CIRCLE_SHA1}
                  account-url: AWS_ECR_ACCOUNT_URL
                  aws-access-key-id: AWS_ACCESS_KEY_ID
                  aws-secret-access-key: AWS_SECRET_ACCESS_KEY
                  region: AWS_DEFAULT_REGION
                  extra-build-args: --build-arg DEV_AUTH_BASIC_USERNAME=${DEV_AUTH_BASIC_USERNAME} --build-arg DEV_AUTH_BASIC_PASSWORD=${DEV_AUTH_BASIC_PASSWORD} --build-arg STG_AUTH_BASIC_USERNAME=${STG_AUTH_BASIC_USERNAME} --build-arg STG_AUTH_BASIC_PASSWORD=${STG_AUTH_BASIC_PASSWORD} --build-arg CIRCLE_BRANCH=${CIRCLE_BRANCH}
                
    deploy:
        docker:
            - image: circleci/python:3.6
        working_directory: ~/team_4/.circleci/task-definitions
        steps:
            - aws-cli/install
            - attach_workspace:
                  at: ~/team_4
            - run:
                  name: Load Task Definition File
                  command: |
                      jsons=(app-task-definition.json migrate-task-definition.json) && \
                      for json in ${jsons[@]}; do
                          printf "cat \<<EOF\n`cat $json`\nEOF\n" | sh > "ci-$json"
                      done
            - run:
                  name: Register new app task definition
                  command: aws ecs register-task-definition --family dev-enudge-test2 --cli-input-json file://ci-app-task-definition.json --region ap-northeast-1
            # - run:
            #       name: Update app service
            #       command: aws ecs update-service --cluster dev-enudge-test2 --service app --desired-count 2 --task-definition dev-enudge-test2 --region ap-northeast-1

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
        - checkout:
            filters:
                branches:
                    only:
                        - main
                        - dev
                        - stg
        - push_image_enudge:
            requires:
                - checkout
        - deploy:
                  requires:
                      - push_image_enudge
                  filters:
                      branches:
                          only:
                              - dev

